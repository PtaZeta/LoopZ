services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        volumes:
            - .:/var/www/html

            - ./docker/php/conf.d/custom-uploads.ini:/usr/local/etc/php/conf.d/custom-uploads.ini
        ports:
            - "9000:9000"
        depends_on:
            db:
                condition: service_healthy
            meilisearch:
                condition: service_started
            icy-api:
                condition: service_started
            mailpit:
                condition: service_started
        env_file:
            - .env
        command: php-fpm

    nginx:
        image: nginx:stable-alpine
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - .:/var/www/html
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        depends_on:
            - app
            - certbot

    certbot:
        image: certbot/certbot
        volumes:
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        command: sh -c "trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot --quiet; sleep 12h & wait $${!}; done"

    db:
        image: 'postgres:15-alpine'
        restart: unless-stopped
        ports:
            - '${DB_PORT:-5432}:5432'
        environment:
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD}'
            PGPASSWORD: '${DB_PASSWORD}'
        volumes:
            - 'pg_data:/var/lib/postgresql/data'
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}" ]
            interval: 5s
            timeout: 5s
            retries: 5
            start_period: 10s

    meilisearch:
        image: 'getmeili/meilisearch:v1.6'
        ports:
            - '${MEILISEARCH_PORT:-7700}:7700'
        volumes:
            - 'meilisearch_data:/meili_data'
        env_file:
            - .env

    icy-api:
        build:
            context: .
            dockerfile: Dockerfile.icy-server
        restart: unless-stopped
        ports:
            - "3001:3001"
        env_file:
            - .env

    mailpit:
        image: 'axllent/mailpit:latest'
        restart: unless-stopped
        ports:
            - '${FORWARD_MAILPIT_PORT:-1025}:1025'
            - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'

volumes:
    pg_data:
    meilisearch_data:
